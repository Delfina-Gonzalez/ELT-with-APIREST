# 🚀 Proyecto ELT con SpaceX API  

Este proyecto implementa un pipeline **ELT** (Extract, Load, Transform) utilizando la API pública de **SpaceX**.  
El objetivo es construir un **data lake** organizado en capas (**bronze, silver, gold**) para almacenar, limpiar y transformar datos provenientes de distintos endpoints de la API.

---

## 📂 Estructura del proyecto

Proyecto-ELT/
│── data/
│ ├── bronze/ # Datos crudos desde la API (full e incremental)
│ ├── silver/ # Datos limpios y transformados
│ └── gold/ # Datos enriquecidos/listos para análisis
│
│── src/
│ ├── config.py # Configuración del proyecto y paths
│ ├── extract.py # Extracción de datos desde la API
│ ├── load.py # Funciones de guardado en parquet
│ ├── transform.py # Funciones de transformación
│ └── utils.py # Logger y utilidades
│
│── 01_extracción.ipynb # Ejemplo de extracción (full e incremental)
│── 02_transformación.ipynb # Ejemplo de transformaciones y guardado en silver
│── requirements.txt
│── README.md
│── .gitignore


---

## 🚀 Funcionalidades

### Extracción
- Obtiene datos desde distintos **endpoints de la API SpaceX**.
- Diferencia entre **extracción full** (sin particionar) e **incremental** (particionado por fecha).
- Almacena los datos crudos en **data/bronze** en formato **Parquet**.

### Transformaciones
- Se aplican desde la capa **bronze**:
  - Eliminación de duplicados.
  - Manejo de valores nulos.
  - Renombrado de columnas.
  - Creación de columnas derivadas.
- Los resultados se guardan en **data/silver**.

### Organización del Data Lake
- **Bronze** → Datos crudos de la API (raw).  
- **Silver** → Datos limpios y consistentes.  
- **Gold** → Datos enriquecidos o métricas finales (ejemplo: KPIs).

---

## 🛠 Requisitos

- Python 3.10+
- Librerías listadas en `requirements.txt`

Instalación:
```bash
pip install -r requirements.txt

## ▶️ Ejecución

- Extracción (notebook 01_extracción.ipynb)

Extrae datos de al menos dos endpoints.

Guarda resultados en bronze diferenciando full e incremental.

- Transformación (notebook 02_transformación.ipynb)

Carga datos desde bronze.

Aplica transformaciones.

Guarda resultados en silver.

